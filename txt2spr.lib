TXT2SPR PROC
	;IN DS:SI - TXT TABLE;+16-TXT FILE
	;   ES:DI - SPR TABLE
	;   CS:BX - CODE&COLOR TABLE
	;   CX - LEN OF TXT FILE
	;OUT	DX -LEN OF NEW FILE
	PUSH	DX
	PUSHA
	MOV	CS:[TEXT_TABLE+2],DS
	MOV	CS:[TEXT_TABLE],SI
	ADD	SI,16
	XOR	DX,DX
	MOV	BP,DX
TXT2SPR_2:
	LODSB
	CMP	AL,9H
	JZ	TXT2SPR_TAB
	CMP	AL,0AH
	JZ	TXT2SPR_ENTER
	CMP	AL,1FH
	JBE	TXT2SPR_1
	CALL	TAKE_COLOR
	CALL	CONVERT_SYMBOL
	CALL	ADD_1
TXT2SPR_1:
	INC	BP
TXT2SPR_3:
	LOOP	TXT2SPR_2
	MOV	BP,SP
	MOV	SS:[BP+16],DX
	POPA
	POP	DX
	RET
TXT2SPR_TAB:
	CALL	SPACES_FILLING
	JMP	SHORT	TXT2SPR_3
TXT2SPR_ENTER:
	XOR	BP,BP
	JMP	SHORT	TXT2SPR_3
ENDP
SPACES_FILLING	PROC
	PUSH	AX
	PUSH	CX
	PUSH	BX
	MOV	BX,BP
	NEG	BX
	AND	BX,111B
	MOV	CX,BX
	OR	CX,CX
	JNZ	SPACES_FILLING_1
	MOV	CX,8
SPACES_FILLING_1:
	SHL	CX,1
	CALL	ADD_CX
	SHR	CX,1
	ADD	BP,CX
	MOV	AL,' '
	POP	BX
	CALL	TAKE_COLOR
SPACES_FILLING_2:
	CALL	CONVERT_SYMBOL
	LOOP	SPACES_FILLING_2
	POP	CX
	POP	AX
	RET
ENDP
ADD_CX	PROC
	PUSH	CX
ADD_CX_1:
	CALL	ADD_1
	LOOP	ADD_CX_1
	POP	CX
	RET
ENDP
ADD_1	PROC
	PUSH	AX
	PUSH	SI
	PUSH	DS
	LDS	SI,DWORD PTR CS:[TEXT_TABLE]
	MOV	AL,DS:[SI+8]
	XOR	AH,AH
	SHL	AX,2
	ADD	DX,AX
	POP	DS
	POP	SI
	POP	AX
	RET
ENDP
TAKE_COLOR	PROC
	;IN	AL - SYMBOL
	;	CS:BX - CODE&COLOR TABLE
	;OUT	AX - SYMBOL&COLOR
	PUSH	BX
	PUSH	DX
	MOV	DL,AL
TAKE_COLOR_1:
	MOV	AX,CS:[BX]
	INC	BX
	INC	BX
	CMP	AX,0FFFFH
	JZ	TAKE_COLOR_4
	OR	AH,AH
	JNZ	TAKE_COLOR_2
	MOV	DH,AL
	MOV	AX,CS:[BX]
	INC	BX
	INC	BX
	CMP	AL,DL
	JB	TAKE_COLOR_1
	CMP	DH,DL
	JA	TAKE_COLOR_1
	JMP	SHORT	TAKE_COLOR_3
TAKE_COLOR_4:
	MOV	AH,CS:[COLOR_DEFAULT]
	JMP	SHORT	TAKE_COLOR_3
TAKE_COLOR_2:
	CMP	AL,DL
	JNZ	TAKE_COLOR_1
TAKE_COLOR_3:
	MOV	AL,DL
	POP	DX
	POP	BX
	RET
COLOR_DEFAULT	DB	03H
ENDP
CONVERT_SYMBOL	PROC
	;IN AL-SYMBOL
	;   AH-COLOR
	PUSHA
	PUSHF
	PUSH	DS
	CLD
	MOV	DL,AH
	MOV	DH,AH
	AND	DL,0FH
	SHR	DH,4
	MOV	BX,DI
	ADD	DI,16
	ADD	DI,CS:[CONVERT_CURRENT_SELECTOR]
	PUSH	DX
	XOR	AH,AH
	LDS	SI,DWORD PTR CS:[TEXT_TABLE]
	MOV	CL,DS:[SI+8]
	XOR	CH,CH
	LDS	SI,DS:[SI]
	MUL	CX
	ADD	SI,AX
	POP	DX
CONVERT_SYMBOL_2:
	PUSH	DI
	PUSH	CX
	MOV	CX,8
	LODSB
CONVERT_SYMBOL_3:
	TEST	BYTE PTR CS:[CONVERT_FLAG],10000000B
	JNZ	CONVERT_SYMBOL_1
	ROL	AL,1
	PUSH	AX
	MOV	AL,DL
	JC	CONVERT_SYMBOL_4
	MOV	AL,DH
CONVERT_SYMBOL_4:
	SHL	AL,4
	STOSB
	JMP	SHORT	CONVERT_SYMBOL_5
CONVERT_SYMBOL_1:
	ROL	AL,1
	PUSH	AX
	MOV	AL,DL
	JC	CONVERT_SYMBOL_6
	MOV	AL,DH
CONVERT_SYMBOL_6:
	OR	ES:[DI-1],AL
CONVERT_SYMBOL_5:
	POP	AX
	XOR	BYTE PTR CS:[CONVERT_FLAG],10000000B
	LOOP	CONVERT_SYMBOL_3
	POP	CX
	POP	DI
	MOV	AX,ES:[BX+6];LEN X IN PIXELS
	SHR	AX,1
	ADD	DI,AX
	LOOP	CONVERT_SYMBOL_2
	ADD	WORD PTR CS:[CONVERT_CURRENT_SELECTOR],4
	MOV	AX,CS:[CONVERT_CURRENT_SELECTOR]
	MOV	CX,ES:[BX+6]
	SHR	CX,1
	PUSH	CX
	XOR	DX,DX
	DIV	CX
	POP	AX
	OR	DX,DX
	JNZ	CONVERT_SYMBOL_7
	MOV	BX,7
	MUL	BX
	ADD	CS:[CONVERT_CURRENT_SELECTOR],AX
CONVERT_SYMBOL_7:
	POP	DS
	POPF
	POPA
	RET
CONVERT_CURRENT_SELECTOR	DW	0
CONVERT_FLAG		DB	0
TEXT_TABLE		DW	0,0
;7=1-SECOND PART OF BYTE
ENDP
