.286
.MODEL	SMALL
.STACK
ASSUME	CS:COD
COD	SEGMENT PARA
ASSUME	DS:DAT,SS:STACK
BFL	EQU	DAT+(2048+BUF-FN+15)/16
TRY	PROC
	PUSH	DS
	POP	SS
	MOV	AX,DAT
	MOV	DS,AX
	MOV	ES,AX
	LEA	SI,FN
	LEA	DX,BUF
	MOV	AX,-1
	CALL	LOAD_FILE
	JC	TRYE
	OR	CL,CL
	JNZ	TRYE
	MOV	DS:[SPRTBL+02H],CS
	MOV	BYTE PTR DS:[SPRTBL+4],CH
	PUSH	CX
	MOV	AX,010H
	INT	10H
	LEA	SI,FN1
	MOV	AX,BFL
	MOV	DS,AX
	XOR	DX,DX
	MOV	AX,-1
	PUSH	DS
	CALL	LOAD_FILE
	POP	DS
	mov	word ptr ds:[0],10H
	MOV	DS:[2],DS
	XOR	BX,BX
	CALL	EGAWSPR
	MOV	AH,7
	INT	21H
	MOV	BX,DAT
	MOV	DS,BX
	LEA	BX,DAT:W
	CALL	INVWIN
	MOV	AH,07
	INT	21H
	MOV	AX,3
	INT	10H
	MOV	AX,4C00H
	INT	21H
TRYE:
	MOV	AX,4C01H
	INT	21H
INCLUDE IO.LIB
INCLUDE EGAWSPR.LIB
INCLUDE INVWIN.LIB
INCLUDE BWIN2CRD.LIB
INCLUDE BCRD2COL.LIB
INCLUDE BCOL2WIN.LIB
INCLUDE EGA.286
;INCLUDE SYM2SPR.LIB
ENDP

ENDS
DAT	SEGMENT BYTE
FN	DB	'TRY.FNT',0
FN1	DB	'DEMO.SPR',0
VIEW_	DB	'PAVEL SKRYLEV''S COMPUTER',0
SPRTBL	DW	COD:SPR_,0
	DW	0
	DW	8
	DW	128,8
	DB	0
	DB	0,0,0

W	DW	2*8,7*8,0,0
	DB	4
	DB	0,0,0,0,0,0,0

INK	DB	15
PAPER	DB	0
SPR_	DB	(8*16)/2	  DUP	      (0)
BUF:
ENDS
END     TRY